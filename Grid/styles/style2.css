/* Basic styling */
html, body {
    margin: 10px;
    background-color: antiquewhite;
    color:antiquewhite;

}
.container > div {
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 23px;
    background-color: rgb(58, 58, 187);
}

/*** EXTRA NOTE ***/
/* To use the grid-row inside a child w/display grid
we also need to define the grid-column */

/* Grid stuff */
.container {
    display: grid;
    gap: 10px;
    /*** Changed to have more flexibility ***/
    /* grid-template: 40px 200px 40px / repeat(2, 1fr);  */
    grid-template: 40px 200px 40px / repeat(12, 1fr);
}

.header {
    /* We have 2 columns; 
    1 = left-most corner
    3 = right-most corner */
    /*** First finished layout ***/
    /* grid-column-start: 1;
    grid-column-end: -1; */

    /* Leave space on top for the menu */
    grid-column: 3 / -1;
}

.footer {
    /* short-hand for the start & end */
    /* grid-column: 1 / 3; */

    /*** Another way; exPANd tru the 2 columns ***/
    /* grid-column: 1 / span 2; */

    /*** Yet another way;  Same as in Python indexing***/
    grid-column: 1 / -1;
}

.menu {
    /* ocupy 2 columns */
    grid-row: 1 / -2;
    grid-column: 1 / 3;
}

.content {
    /* from menu -> end */
    grid-column: 3 / -1;
}